// <auto-generated />
using System;
using API_Juliet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Juliet.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240423215341_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaseLibrary.Models.Bostad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Antalrum")
                        .HasColumnType("int");

                    b.Property<int>("Biarea")
                        .HasColumnType("int");

                    b.Property<int>("Boarea")
                        .HasColumnType("int");

                    b.Property<int?>("BostadKategoriId")
                        .HasColumnType("int");

                    b.Property<int>("Byggår")
                        .HasColumnType("int");

                    b.Property<int>("Driftkonstnad")
                        .HasColumnType("int");

                    b.Property<int?>("KommunId")
                        .HasColumnType("int");

                    b.Property<int?>("MäklareId")
                        .HasColumnType("int");

                    b.Property<int>("Månadsavgift")
                        .HasColumnType("int");

                    b.Property<string>("Objektbeskrivning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tomtarea")
                        .HasColumnType("int");

                    b.Property<int>("Utgångspris")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BostadKategoriId");

                    b.HasIndex("KommunId");

                    b.HasIndex("MäklareId");

                    b.ToTable("Bostäder");
                });

            modelBuilder.Entity("BaseLibrary.Models.BostadKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Kategori")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BostadKategori");
                });

            modelBuilder.Entity("BaseLibrary.Models.Kommun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Namn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kommuner");
                });

            modelBuilder.Entity("BaseLibrary.Models.Mäklarbyrå", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Logotyp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Presentation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mäklarbyråer");
                });

            modelBuilder.Entity("BaseLibrary.Models.Mäklare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bild")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Efternamn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epostadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Förnamn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MäklarbyråId")
                        .HasColumnType("int");

                    b.Property<string>("Telefonnummer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MäklarbyråId");

                    b.ToTable("Mäklare");
                });

            modelBuilder.Entity("BaseLibrary.Models.Bostad", b =>
                {
                    b.HasOne("BaseLibrary.Models.BostadKategori", "BostadKategori")
                        .WithMany()
                        .HasForeignKey("BostadKategoriId");

                    b.HasOne("BaseLibrary.Models.Kommun", "Kommun")
                        .WithMany()
                        .HasForeignKey("KommunId");

                    b.HasOne("BaseLibrary.Models.Mäklare", "Mäklare")
                        .WithMany()
                        .HasForeignKey("MäklareId");

                    b.Navigation("BostadKategori");

                    b.Navigation("Kommun");

                    b.Navigation("Mäklare");
                });

            modelBuilder.Entity("BaseLibrary.Models.Mäklare", b =>
                {
                    b.HasOne("BaseLibrary.Models.Mäklarbyrå", "Mäklarbyrå")
                        .WithMany()
                        .HasForeignKey("MäklarbyråId");

                    b.Navigation("Mäklarbyrå");
                });
#pragma warning restore 612, 618
        }
    }
}
