@*
    Author: Johan Ahlqvist
    Edited to use IClient: Tobias svensson
*@
@page "/authentication/register"
@using JulietBlazorApp.Services.Authentication
@using JulietBlazorApp.Services.Base
@inject IClient httpClient
@inject NavigationManager navManager

<h3>Skapa ny användare</h3>
@if (errorMessage is not null)
{
    <p class="error">@errorMessage</p>
}

<div>
    <EditForm Model="RegistrationModel" OnValidSubmit="HandleRegistration">
        <div class="form-group">
            <label for="email" >E-post:</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.Email" />
        </div>
        <div class="form-group">
            <label for="firstname">Förnamn:</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.Förnamn" />
        </div>
        <div class="form-group">
            <label for="lastname">Efternamn:</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.Efternamn" />
        </div>
        <div class="form-group">
            <label for="password">Lösenord:</label>
            <InputText class="form-control" type="password" @bind-Value="RegistrationModel.Password" />
        </div>
        <button type="submit" class="btn btn-primary btn-block mt-3">Skapa</button>
    </EditForm>
</div>

@code {
    MäklareDto RegistrationModel = new MäklareDto();
    private string? errorMessage = string.Empty;

    private async Task HandleRegistration()
    {
        try
        {
            await httpClient.RegisterAsync(RegistrationModel);
            navManager.NavigateTo("/authentication/login");
        }
        catch (ApiException ex)
        {
            if (ex.StatusCode >= 200 && ex.StatusCode <= 299)
            {
                navManager.NavigateTo("/authentication/login");
            }

            errorMessage = ex.Message;
        }
    }
}
