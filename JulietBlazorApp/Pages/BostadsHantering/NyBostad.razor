@using BaseLibrary.DTO
@using JulietBlazorApp.Providers
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider authStateProvider
@inject BostadBildDtoService BostadBildDtoService
@inject BostadDtoService BostadDtoService
@inject NavigationManager NavigationManager


<div class="modal" tabindex="-1" style="display:block;">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="modal-header" style="background-color: rgb(25,135,84); color:white; border: none">
                    <h5 class="modal-title"><i class="bi bi-check-circle h1"></i></h5>
                    <button type="button" class="btn-close btn-close-white" @onclick="ClickClose"></button>
                </div>
                <div class="modal-body">
                    @successMessage.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" @onclick="ClickClose">Fortsätt</button>
                </div>
            }
            else
            {
                <div class="modal-header">
                    <h5 class="modal-title">Ny Bostad</h5>
                    <button type="button" class="btn-close" @onclick="ClickClose"></button>
                </div>
                <form @onsubmit:preventDefault="true" @onsubmit="SubmitForm">
                    <div class="modal-body">
                        <section>
                            <div class="row">
                                <div class="col">
                                    <div class="mb-2">
                                        <label for="utgångspris" class="form-label mb-1">Utgångspris</label>
                                        <input type="number" class="form-control" id="utgångspris" @bind="utgångspris" required>
                                    </div>
                                    <div class="mb-2">
                                        <label for="månadsavgift" class="form-label mb-1">Månadsavgift</label>
                                        <input type="number" class="form-control" id="månadsavgift" @bind="månadsavgift">
                                    </div>
                                    <div class="mb-2">
                                        <label for="driftkonstnad" class="form-label mb-1">Driftkonstnad</label>
                                        <input type="number" class="form-control" id="driftkonstnad" @bind="driftkonstnad">
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="mb-2">
                                        <label for="gatuadress" class="form-label mb-1">Gatuadress</label>
                                        <input type="text" class="form-control" id="gatuadress" placeholder="Gata nr" @bind="gatuadress" required>
                                    </div>
                                    <div class="mb-2">
                                        <label for="ort" class="form-label mb-1">Ort</label>
                                        <input type="text" class="form-control" id="ort" @bind="ort" required>
                                    </div>
                                    <div class="mb-2">
                                        <label for="kommunId" class="form-label mb-1">Kommun</label>
                                        @if (Kommuner != null)
                                        {
                                            <select @bind="kommunId" class="form-select" id="kommunId" required>
                                                @foreach (var kommun in Kommuner)
                                                {
                                                    <option value="@kommun.Id">@kommun.Namn</option>
                                                }
                                            </select>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-4">
                                <div class="col">
                                    <div class="mb-2">
                                        <label for="boarea" class="form-label mb-1">Boarea</label>
                                        <input type="number" class="form-control" id="boarea" @bind="boarea" required>
                                    </div>

                                    <div class="mb-2">
                                        <label for="biarea" class="form-label mb-1">Biarea</label>
                                        <input type="number" class="form-control" id="biarea" @bind="biarea">
                                    </div>

                                    <div class="mb-2">
                                        <label for="tomtarea" class="form-label mb-1">Tomtarea</label>
                                        <input type="number" class="form-control" id="tomtarea" @bind="tomtarea">
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="mb-2">
                                        <label for="antalrum" class="form-label mb-1">Antalrum</label>
                                        <select @bind="antalrum" class="form-select" id="antalrum" required>
                                            @for (int i = 1; i < 11; i++)
                                            {
                                                <option value="@i">@i</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="mb-2">
                                        <label for="byggår" class="form-label mb-1">Byggår</label>
                                        <input type="number" class="form-control" id="byggår" @bind="byggår" required>
                                    </div>
                                    <div class="mb-2">
                                        <label for="kategoriId" class="form-label mb-1">Kategori</label>
                                        @if (BostadKategorier != null)
                                        {
                                            <select @bind="kategoriId" class="form-select" id="kategoriId" required>
                                                @foreach (var kategori in BostadKategorier)
                                                {
                                                    <option value="@kategori.Id">@kategori.Namn</option>
                                                }
                                            </select>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3 mt-4">
                                <label for="objektbeskrivning" class="form-label mb-1">Objektbeskrivning</label>
                                <textarea class="form-control" id="objektbeskrivning" @bind="objektbeskrivning" rows="5" required></textarea>
                            </div>
                            <div class="d-flex justify-content-end">
                                <button type="button" class="btn btn-secondary" style="margin-right: 10px;" @onclick="ClickClose">Avbryt</button>
                                <button type="submit" class="btn btn-primary">Skapa</button>
                            </div>
                        </section>
                        <div class="mt-4 d-flex align-items-center">
                            <div>
                                <label for="PictureURL">Lägg till bild URL</label>
                                <input type="text" id="PictureURL" @bind="newPictureURL">
                            </div>
                            <button type="button" class="btn btn-primary btn-sm" style="margin-right: 10px;" @onclick="AddPictureURl" disabled="@IsPictureLimitReached()"><i class="bi bi-plus-lg"></i></button>
                            @if (IsPictureLimitReached())
                            {
                                <p style="color: red;">Max 40 bilder</p>
                            }
                            else
                            {
                                <p>@bostadensBilder.Count()/40</p>
                            }
                        </div>
                        <div>
                            @if (bostadensBilder != null)
                            {
                                var numberOfBilder = bostadensBilder.Count();
                                //4 bilder i rad
                                for (int i = 0; i < numberOfBilder; i += 4)
                                {
                                    var bildRow = bostadensBilder.Skip(i).Take(4).ToList();

                                    <div class="row mt-4">
                                        @foreach (string bild in bildRow)
                                        {
                                            if (imageAlternative == bild)
                                            {
                                                <div class="col-md-3">
                                                    <div class="image-button">
                                                        <div class="emty-room" style="background-image: url('@bild');">
                                                            <div class="button-container">
                                                                <button type="button" class="btn-secondary cancel-button" @onclick="ToggleOffImageAlternatives"><i class="bi bi-x h4"></i></button>
                                                                <button type="button" class="btn-danger remove-button" @onclick="()=>RemoveImage(bild)"><i class="bi bi-trash h4"></i></button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-md-3">
                                                    <button type="button" class="image-button" @onclick="()=>ToggleImageAlternatives(bild)">
                                                        <img class="full-image" src="@bild" alt="Bostadsbild">
                                                    </button>
                                                </div>
                                            }
                                        }
                                    </div>
                                }
                            }
                        </div>

                    </div>
                    <div class="modal-footer">
                    </div>
                </form>
            }
        </div>
    </div>
</div>



@code {
    [Parameter]
    public IEnumerable<BostadKategoriDto> BostadKategorier { get; set; }
    [Parameter]
    public IEnumerable<KommunDto> Kommuner { get; set; }
    [Parameter]
    public string MäklarId { get; set; }


    private BostadDto bostad;

    private int utgångspris;
    private int boarea;
    private int biarea;
    private int tomtarea;
    private int antalrum;
    private int? månadsavgift;
    private int driftkonstnad;
    private int byggår;
    private string? gatuadress;
    private string? ort;
    private string? objektbeskrivning;
    private int kategoriId;
    private int kommunId;
    private string? mäklarId;

    private string? successMessage;

    private const int pictureLimit = 40;
    private List<string> bostadensBilder = new List<string>();
    private string newPictureURL;
    private string? imageAlternative = null;

    private void AddPictureURl()
    {
        if (!string.IsNullOrWhiteSpace(newPictureURL))
        {
            bostadensBilder.Add(newPictureURL);
            newPictureURL = string.Empty;
        }
    }
    private bool IsPictureLimitReached()
    {
        return bostadensBilder.Count >= pictureLimit;
    }
    private void ToggleImageAlternatives(string bild)
    {
        imageAlternative = bild;
    }
    private void ToggleOffImageAlternatives()
    {
        imageAlternative = null;
    }
    private void RemoveImage(string bildURL)
    {
        bostadensBilder.Remove(bildURL);
        imageAlternative = null;
    }


    [Parameter]
    public EventCallback OnCancel { get; set; }

    private async Task ClickClose()
    {
        await OnCancel.InvokeAsync();
    }

    private async Task SubmitForm()
    {
        try
        {
            bostad = new BostadDto
                {
                    Utgångspris = utgångspris,
                    Boarea = boarea,
                    Biarea = biarea,
                    Tomtarea = tomtarea,
                    Antalrum = antalrum,
                    Månadsavgift = månadsavgift,
                    Driftkonstnad = driftkonstnad,
                    Byggår = byggår,
                    Gatuadress = gatuadress,
                    Ort = ort,
                    Objektbeskrivning = objektbeskrivning,
                    KategoriId = kategoriId,
                    KommunId = kommunId,
                    MäklarId = MäklarId

                };

            int? createdBostadId = await BostadDtoService.AddBostadAsync(bostad);

            if (createdBostadId != null)
            {
                successMessage = $"Ny bostad på {bostad.Gatuadress} har lagts till";

                List<BostadBildDto> bostadBildDtoList = new List<BostadBildDto>();
                foreach (string url in bostadensBilder)
                {
                    bostadBildDtoList.Add(new BostadBildDto { BildURL = url, BostadId = (int)createdBostadId });
                }

                await BostadBildDtoService.AddBostadsBilderAsync(bostadBildDtoList);

            }
        }
        catch (Exception ex)
        {
            throw;
        }
    }
}